import re
import json
import os

# ------------------ Validação de senha ------------------

def validar_senha(senha):
    if (len(senha) < 8 or 
        not re.search(r'[A-Z]', senha) or 
        not re.search(r'[a-z]', senha) or 
        not re.search(r'[0-9]', senha) or 
        not re.search(r'[!@#$%^&*(),.?":{}|<>]', senha)):
        return False
    return True

# ------------------ Cadastro/Login ------------------

def cadastrar_usuario():
    print("=== Cadastro de Novo Usuário ===")
    usuario = input("Digite um nome de usuário: ")
    while True:
        senha = input("Digite uma senha (mínimo 8 caracteres, com letra maiúscula, minúscula, número e caractere especial): ")
        if validar_senha(senha):
            break
        print("Senha inválida. Tente novamente.")
    salvar_credenciais(usuario, senha)
    print("Cadastro realizado com sucesso!")

def salvar_credenciais(usuario, senha):
    with open("usuarios.json", "w") as f:
        json.dump({"usuario": usuario, "senha": senha}, f)

def verificar_credenciais():
    if not os.path.exists("usuarios.json"):
        cadastrar_usuario()
        return True

    with open("usuarios.json", "r") as f:
        dados = json.load(f)

    print("\n=== Login ===")
    usuario = input("Usuário: ")
    senha = input("Senha: ")

    if usuario == dados["usuario"] and senha == dados["senha"]:
        print("Login realizado com sucesso!\n")
        return True
    else:
        print("Usuário ou senha incorretos.")
        return False

# ------------------ Menu Principal ------------------

def menu_principal():
    while True:
        print("\n=== Áreas de Estudo ===")
        print("1. Python")
        print("2. Matemática e Estatística")
        print("3. Infraestrutura Computacional")
        print("4. Segurança Digital")
        print("5. Ajuda ao Usuário")
        print("0. Sair")
        escolha = input("Escolha uma opção: ")

        if escolha == "1":
            area_estudo("Python")
        elif escolha == "2":
            area_estudo("Matemática e Estatística")
        elif escolha == "3":
            area_estudo("Infraestrutura Computacional")
        elif escolha == "4":
            area_estudo("Segurança Digital")
        elif escolha == "5":
            ajuda_usuario()
        elif escolha == "0":
            print("Saindo do sistema.")
            break
        else:
            print("Opção inválida.")

# ------------------ Área de Estudo ------------------

def area_estudo(area):
    print(f"\n=== Área de Estudo: {area} ===")
    print("1. Ver Documentação")
    print("2. Acessar Links de Estudo")
    print("3. Realizar Teste")
    print("0. Voltar ao Menu Principal")
    escolha = input("Escolha uma opção: ")

    if escolha == "1":
        print(f"\nDocumentação de {area}:")
        print("Este é um material introdutório sobre a área de estudo.")
    elif escolha == "2":
        print(f"\nLinks de Estudo de {area}:")
        print("https://unipead-my.sharepoint.com/:w:/r/personal/mateus_pereir1_aluno_unip_br/_layouts/15/Doc.aspx?sourcedoc=%7B529337E0-F2E3-4C97-8D02-BE53A7943F65%7D&file=Documento%209.docx&action=editnew&mobileredirect=true&wdPreviousSession=315beeab-d103-66c5-6df7-e91bd0662a96&wdNewAndOpenCt=1747321327694&wdo=4&wdOrigin=wacFileNew&wdPreviousCorrelation=e3cdfc16-1ade-473e-abbe-3327f40e3e6e&wdnd=1&wdTpl=blankNew")
    elif escolha == "3":
        nota = realizar_teste(area)
        gerar_relatorio(area, nota)
    elif escolha == "0":
        return
    else:
        print("Opção inválida.")

# ------------------ Teste Simples ------------------

def realizar_teste(area):
    print(f"\nIniciando teste da área: {area}")
    nota = 0
    perguntas = {
        "Python": [
            ("O que é uma lista em Python?", "estrutura de dados"),
            ("Qual a função para imprimir no terminal?", "print")
        ],
        "Matemática e Estatística": [
            ("Quanto é 4**4?", "2"),
            ("Qual é a média de 4, 6 e 10?", "6.67")
        ],
        "Infraestrutura Computacional": [
            ("O que é uma CPU?", "unidade central de processamento"),
            ("O que significa RAM?", "memória de acesso aleatório")
        ],
        "Segurança Digital": [
            ("O que é phishing?", "ataque de engenharia social"),
            ("Senha segura deve conter quantos caracteres no mínimo?", "8")
        ]
    }

    for pergunta, resposta_certa in perguntas.get(area, []):
        resposta = input(pergunta + " ").strip().lower()
        if resposta == resposta_certa.lower():
            nota += 1

    total = len(perguntas.get(area, []))
    print(f"\nVocê acertou {nota} de {total} perguntas.")
    return nota / total * 100

# ------------------ Geração de Relatório ------------------

def gerar_relatorio(area, nota):
    nome_arquivo = f"relatorio_{area.replace(' ', '_').lower()}.txt"
    with open(nome_arquivo, "w") as f:
        f.write(f"Relatório de Atividades - {area}\n")
        f.write(f"Nota Obtida: {nota:.2f}%\n")
        if nota >= 70:
            f.write("Status: Aprovado\n")
            f.write("Atestado de Conclusão: SIM\n")
        else:
            f.write("Status: Reprovado\n")
            f.write("Atestado de Conclusão: NÃO\n")
    print(f"\nRelatório salvo em: {nome_arquivo}")

# ------------------ Ajuda ao Usuário ------------------

def ajuda_usuario():
    print("\n=== Ajuda ao Usuário ===")
    print("1. Crie seu usuário com uma senha forte.")
    print("2. Acesse o menu principal após o login.")
    print("3. Escolha uma área de estudo para aprender e testar.")
    print("4. Após o teste, um relatório será gerado com sua nota.")
    print("5. Refaça os testes quantas vezes quiser para melhorar sua nota.")

# ------------------ Execução ------------------

if __name__ == "__main__":
    while not verificar_credenciais():
        pass
    menu_principal()
